##### DEFAULT CONFIGS
 
set -g mouse on
set -g allow-rename off
setw -g mode-keys vi
set -g renumber-windows on
set-option -g base-index 1

# To prevent ESC holding on vi
set -s escape-time 0

# Change prefix key
set -g prefix C-a
unbind C-b
bind C-a send-prefix

unbind .
unbind ,

# For vim plugin event trigger
set -g focus-events on

# Set the terminal type so colors get rendered correctly
set -g default-terminal "screen-256color"

# Set shell
set -g default-shell "$FISH"
set -g default-command "fish"

#### FZF integration
bind-key 0 run "tmux split-window -p 40 'bash -ci ftpane'"

#### KEY BINDINGS

# ctrl-r: Reload tmux config
bind r source-file ~/.tmux.conf \; display 'Config reloaded.'

## SESSION
Bind-key N command-prompt 'rename-session %%'

## WINDOW

# rename window
bind-key n command-prompt 'rename-window %%'

# new window
bind-key c new-window

# Ctrl-Alt-[hl] : select window
bind-key -n C-M-h previous-window
bind-key -n C-M-l next-window

# Ctrl-Alt-[jk] : swap window
bind-key -n C-M-j swap-window -t :+
bind-key -n C-M-k swap-window -t :-

# kill window
bind-key -n C-M-x kill-window

# Window Split
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
bind q confirm killp

## PANE

# sync pane
bind y set-window-option synchronize-panes \; display 'Synchronize-panes toggled.'

# layout
bind-key enter next-layout

# Ctrl-[,.] : swap pane 
bind , swap-pane -D
bind . swap-pane -U
bind -n C-, run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-,) || tmux swap-pane -D"
bind -n C-. run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-.) || tmux swap-pane -U"

# Ctrl-[hjkl] : select pane
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# alt-[hjkl] : resize pane
bind M-h resize-pane -L 5
bind M-j resize-pane -D 5
bind M-k resize-pane -U 5 bind M-l resize-pane -R 5
bind -n M-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-h) || tmux resize-pane -L 5"
bind -n M-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-j) || tmux resize-pane -D 5"
bind -n M-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-k) || tmux resize-pane -U 5"
bind -n M-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-l) || tmux resize-pane -R 5"

## COPY MODE

# Make Home and End keys work in copy mode
bind-key -T copy-mode-vi H send-key '^'
bind-key -T copy-mode-vi L send-key '$'

## PLUGINS

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'christoomey/vim-tmux-navigator'
run '~/.tmux/plugins/tpm/tpm'

set -g @yank_selection 'primary'
bind-key y send-keys `y
