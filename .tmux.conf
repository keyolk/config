##### DEFAULT CONFIGS
 
set-option -g mouse on
set-option -g allow-rename off
set-option -g renumber-windows on
set-option -g base-index 1
set-window-option -g pane-base-index 1
set-window-option -g mode-keys vi
set-option -g history-limit 100000

# To prevent ESC holding on vi
set-option -s escape-time 0

# Unbind keys
unbind-key C-b
unbind-key .
unbind-key ,
unbind-key m
unbind-key y

# Change prefix key
set-option -g prefix C-a
bind-key C-a send-prefix

# For vim plugin event trigger
set-option -g focus-events on

# Set the terminal type so colors get rendered correctly
set-option -g default-terminal "screen-256color"

# Set shell
set-option -g default-shell "$FISH"
set-option -g default-command "fish"

#### FZF integration
bind-key 0 run "tmux split-window -p 40 'bash -ci ftpane'"

#### KEY BINDINGS

# ctrl-r: Reload tmux config
bind-key r source-file ~/.tmux.conf \; display 'Config reloaded.'

## SESSION / CLIENT
bind-key N command-prompt 'rename-session %%'
bind-key C new-session
bind-key -n C-M-j switch-client -n
bind-key -n C-M-k switch-client -p

## WINDOW
bind-key n command-prompt 'rename-window %%'
bind-key c new-window
bind-key Q confirm kill-window

# Ctrl-Alt-[hl] : select window
bind-key C-M-h previous-window
bind-key C-M-l next-window
bind-key -n C-M-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-h) || tmux previous-window"
bind-key -n C-M-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-M-l) || tmux next-window"

# Ctrl-Alt-[jk] : swap window
bind-key -n C-S-h swap-window -t -1
bind-key -n C-S-l swap-window -t +1

## PANE
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key q confirm kill-pane
bind-key y set-window-option synchronize-panes \; display 'Synchronize panes toggled.'
bind-key enter next-layout

# Ctrl-[,.] : swap pane 
bind-key , swap-pane -D
bind-key . swap-pane -U
bind-key -n C-, run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-,) || tmux swap-pane -D"
bind-key -n C-. run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-.) || tmux swap-pane -U"

# Ctrl-[hjkl] : select pane
bind-key C-h select-pane -L
bind-key C-j select-pane -D
bind-key C-k select-pane -U
bind-key C-l select-pane -R
bind-key -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind-key -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind-key -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind-key -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# alt-[hjkl] : resize pane
bind-key M-h resize-pane -L 5
bind-key M-j resize-pane -D 5
bind-key M-k resize-pane -U 5 
bind-key M-l resize-pane -R 5
bind-key -n M-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-h) || tmux resize-pane -L 5"
bind-key -n M-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-j) || tmux resize-pane -D 5"
bind-key -n M-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-k) || tmux resize-pane -U 5"
bind-key -n M-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys M-l) || tmux resize-pane -R 5"

## COPY MODE

# Make Home and End keys work in copy mode
bind-key -T copy-mode-vi H send-key '^'
bind-key -T copy-mode-vi L send-key '$'

## PLUGINS

set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-sensible'
set-option -g @plugin 'tmux-plugins/tmux-yank'
set-option -g @plugin 'christoomey/vim-tmux-navigator'
run '~/.tmux/plugins/tpm/tpm'
